{{- $selectorLabels := include "servarr.selectorLabels" . -}}
{{- $labels := include "servarr.labels" . -}}
{{- $serviceAccountName := include "servarr.serviceAccountName" . -}}
{{- range $key, $val := pick .Values "sonarr" "radarr" "lidarr" "readarr" "prowlarr" | default dict }}
{{- if or $val.enabled (eq $key "prowlarr") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ default $key $val.nameOverride }}
  labels:
    {{- $labels | nindent 4 }}
    app.kubernetes.io/component: {{ $key }}
spec:
  replicas: {{ default 1 $val.replicaCount }}
  selector:
    matchLabels:
      {{- $selectorLabels | nindent 6 }}
  template:
    metadata:
      {{- with $val.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- $selectorLabels | nindent 8 }}
    spec:
      {{- with $val.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $serviceAccountName }}
      securityContext:
        {{- toYaml $val.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $key }}
          securityContext:
            {{- toYaml $val.securityContext | nindent 12 }}
          image: {{ $val.image | default (printf "lscr.io/linuxserver/%s:latest" $key) | quote }}
          imagePullPolicy: {{ $val.imagePullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: {{ $val.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /usr/bin/env
              - bash
              - -c
              - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\> && while
                read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml (default dict $val.resources) | nindent 12 }}
      {{- with $val.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (coalesce $val.affinity $val.affinity dict) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $val.tolerations | default dict }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
