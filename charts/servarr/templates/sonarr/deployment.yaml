apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sonarr.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "sonarr.labels" . | nindent 4 }}
spec:
  {{- include "sonarr.replicas" . | nindent 2 }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "sonarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/sonarr/config.yaml") . | sha256sum }}
        {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.sonarr.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "sonarr.selectorLabels" . | nindent 8 }}
        {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.sonarr.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.sonarr.selectorLabels }}
        {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "servarr.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.global.priorityClassName .Values.sonarr.priorityClassName }}
      priorityClassName: {{ coalesce .Values.global.priorityClassName .Values.sonarr.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.global.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.sonarr.terminationGracePeriodSeconds }}
      initContainers:
      - name: sonarr-init-db
        image: "bitnami/postgresql:latest"
        command:
          - /bin/sh
          - -c
        args:
          - |
            echo "Creating DB for sonarr..." && psql postgresql://postgres:$(POSTGRES_PASSWORD)@servarr-postgresql.media.svc.cluster.local:5432/postgres << SQL
            CREATE USER sonarr WITH PASSWORD '$(POSTGRES_SONARR_PASSWORD)' CREATEDB CREATEROLE SUPERUSER;
            CREATE DATABASE sonarr_log OWNER sonarr;
            CREATE DATABASE sonarr OWNER sonarr;
            SQL
        env:
          - name: POSTGRES_SONARR_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "servarr.name" . }}-postgresql
                key: postgres_sonarr_password
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "servarr.name" . }}-postgresql
                key: postgres_admin_password
      - name: sonarr-init-config
        image: mikefarah/yq
        imagePullPolicy: {{ .Values.sonarr.image.pullPolicy | quote }}
        command:
          - /bin/sh
          - -c
        args:
          - echo "Copying config file to workspace" && cp /ro/config.xml /config/config.xml && echo "Files copied"
        volumeMounts:
          - name: config
            mountPath: /config
          - name: data
            mountPath: /data
          - name: config-init
            mountPath: /ro
      containers:
      - name: sonarr
        image: {{ printf "%s:%s" .Values.sonarr.image.repository .Values.sonarr.image.tag }}
        imagePullPolicy: {{ .Values.sonarr.image.pullPolicy | quote }}
        # command:
        #   - /bin/sh
        #   - -c # chown -R 1000:1000 /config && /init
        # args:
        #   - echo "Copying config file to workspace" && cp /config/ro/config.xml /config/config.xml && /init
        ports:
          - name: http
            containerPort: {{ default 8989 .Values.sonarr.service.port }}
            protocol: TCP
        volumeMounts:
          - name: config
            mountPath: /config
          - name: tmp
            mountPath: /tmp
          - name: data
            mountPath: /data
          - name: downloads
            mountPath: /data/series
        env:
          - name: TZ
            value: {{ .Values.global.timezone | default "UTC" | quote }}
         {{- with .Values.sonarr.extraEnv }}
         {{- toYaml . | nindent 10 }}
         {{- end }}
        {{- with .Values.sonarr.extraEnvFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.global.containerSecurityContext | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - curl --fail localhost:{{ include "sonarr.port" . }}/api/v3/system/status?apiKey=`IFS=\\> && while read -d \\< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - curl --fail localhost:{{ include "sonarr.port" . }}/api/v3/system/status?apiKey=`IFS=\\> && while read -d \\< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        # startupProbe:
        #   exec:
        #     command:
        #     - /usr/bin/env
        #     - bash
        #     - -c
        #     - curl --fail localhost:{{ include "sonarr.port" . }}/api/v3/system/status?apiKey=`IFS=\\> && while read -d \\< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
        #   initialDelaySeconds: 0
        #   failureThreshold: 30
        #   timeoutSeconds: 5
        #   periodSeconds: 5
        # lifecycle:
        #   postStart:
        #     exec:
        #       command:
        #         - /usr/bin/env
        #         - bash
        #         - -c
        #         - until curl --fail localhost:{{ include "sonarr.port" . }}/api/v3/system/status?apiKey=`IFS=\\> && while read -d \\< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml; do sleep 2; done`
      {{- if or .Values.sonarr.config.enabled }}
      - name: config
        image: ghcr.io/appkins/flemmarr:latest
        # command:
        #   - /bin/sh
        #   - -c
        #   - cp -r /config/* /data/ && chown -R 1000:1000 /data
        volumeMounts:
          - name: config-init
            mountPath: /config
          - name: tmp
            mountPath: /tmp
          - name: data
            mountPath: /data
      {{- end }}
      {{- if or .Values.sonarr.metrics.enabled .Values.sonarr.metrics.exporter.enabled }}
      - name: exporter
        image: {{ printf "%s:%s" .Values.sonarr.metrics.exporter.image.repository .Values.sonarr.metrics.exporter.image.tag | quote }}
        ports:
          - name: metrics
            containerPort: {{ default 9543 .Values.sonarr.metrics.exporter.port }}
            protocol: TCP
        env:
          - name: PORT
            value: {{ default 9543 .Values.sonarr.metrics.exporter.port | quote }}
        volumeMounts:
          - name: config
            mountPath: /config
          - name: tmp
            mountPath: /tmp
          - name: data
            mountPath: /data
      {{- end }}
      {{- with .Values.sonarr.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.sonarr.dnsConfig }}
      dnsConfig:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.sonarr.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sonarr.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: config
          emptyDir: {}
        - name: downloads
          persistentVolumeClaim:
            claimName: {{ include "servarr.name" . }}-downloads
        - name: config-init
          {{- include "sonarr.configVolume" . | nindent 10 }}
        # Extra volumes
        {{- with .Values.sonarr.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
