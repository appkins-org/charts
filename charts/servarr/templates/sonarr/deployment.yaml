{{- if .Values.sonarr.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sonarr.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "sonarr.labels" . | nindent 4 }}
spec:
  {{- if not .Values.sonarr.autoscaling.enabled }}
  replicas: {{ .Values.sonarr.replicas }}
  {{- end }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: {{ .Values.common.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "sonarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/sonarr/config.yaml") . | sha256sum }}
        {{- with .Values.common.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.sonarr.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "sonarr.selectorLabels" . | nindent 8 }}
        {{- with .Values.common.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.sonarr.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.sonarr.selectorLabels }}
        {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "servarr.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "sonarr.priorityClassName" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.common.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.sonarr.terminationGracePeriodSeconds }}
      containers:
        - name: sonarr
          image: "{{ .Values.sonarr.image.repository }}:{{ .Values.sonarr.image.tag }}"
          imagePullPolicy: {{ .Values.sonarr.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ default 8989 .Values.sonarr.service.port }}
              protocol: TCP
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
          env:
            - name: TZ
              value: "{{ .Values.common.timezone | default "UTC" }}"
            {{- with .Values.sonarr.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.sonarr.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.common.containerSecurityContext | nindent 12 }}
          livenessProbe:
            exec:
              command:
              - /usr/bin/env
              - bash
              - -c
              - "curl --fail localhost:{{ include "sonarr.port" . }}/api/v3/system/status?apiKey=`IFS=\\> && while
                read -d \\< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`"
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: {{ include "sonarr.port" . }}
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: {{ include "sonarr.port" . }}
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5

        - name: exporter
          image: ghcr.io/onedr0p/exportarr:latest
          env:
            - name: PORT
              value: "9707"
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /etc/loki/runtime-config
            - name: tmp
              mountPath: /tmp
            - name: data
              mountPath: /var/loki
      {{- with .Values.sonarr.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.sonarr.dnsConfig }}
      dnsConfig:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.sonarr.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sonarr.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: config
          configMap:
          name: {{ template "sonarr.name" . }}-config
          items:
            - key: "config.xml"
              path: "config.xml"
        {{- with .Values.sonarr.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}
