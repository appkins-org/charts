# Default values for servarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

common:
  timezone: UTC

  # -- Common annotations for all deployments/StatefulSets
  annotations: {}
  # -- Common annotations for all pods
  podAnnotations: {}
  # -- Common labels for all pods
  podLabels: {}
  # -- Common annotations for all services
  serviceAnnotations: {}
  # -- Common labels for all services
  serviceLabels: {}
  # -- The number of old ReplicaSets to retain to allow rollback
  revisionHistoryLimit: 10
  # -- The SecurityContext for Loki pods
  podSecurityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001
  # -- The SecurityContext for Loki containers
  containerSecurityContext:
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

flamarr:
  name: flemmarr
  image:
    repository: pierremesure/flemmarr
    tag: latest
    pullPolicy: IfNotPresent

sonarr:
  name: sonarr
  enabled: true

  image:
    repository: lscr.io/linuxserver/sonarr
    tag: latest
    pullPolicy: IfNotPresent

  terminationGracePeriodSeconds: 30

  env:
    TZ: UTC

  annotations: {}
  podLabels: {}
  selectorLabels: {}
  podAnnotations: {}
  affinity: {}
  extraArgs: []
  # -- Environment variables to add to the canary pods
  extraEnv: []
  # -- Environment variables from secrets or configmaps to add to the canary pods
  extraEnvFrom: []
  # -- Resource requests and limits for the canary
  resources: {}
  # -- DNS config for canary pods
  dnsConfig: {}
  # -- Node selector for canary pods
  nodeSelector: {}
  # -- Tolerations for canary pods
  tolerations: []
  # -- The name of the PriorityClass for loki-canary pods
  priorityClassName: null

  configStorageType: ConfigMap

  replicas: 2

  service:
    port: 8989

  ingress:
    enabled: false

  autoscaling:
    enabled: false

  extraVolumes: []

  existingSecretForConfig: null
  externalConfigSecretName: ""

  readinessProbe: {}

  persistence:
    config:
      enabled: false

    media:
      enabled: false
      mountPath: /media

  metrics:
    # -- Enable and configure Exportarr sidecar and Prometheus serviceMonitor.
    # @default -- See values.yaml
    enabled: false
    serviceMonitor:
      interval: 3m
      scrapeTimeout: 1m
      labels: {}
    # -- Enable and configure Prometheus Rules for the chart under this key.
    # @default -- See values.yaml
    prometheusRule:
      enabled: false
      labels: {}
      # -- Configure additionial rules for the chart under this key.
      # @default -- See prometheusrules.yaml
      rules:
        []
        # - alert: SonarrDown
        #   annotations:
        #     description: Sonarr service is down.
        #     summary: Sonarr is down.
        #   expr: |
        #     sonarr_system_status == 0
        #   for: 5m
        #   labels:
        #     severity: critical
    exporter:
      image:
        # -- image repository
        repository: ghcr.io/onedr0p/exportarr
        # -- image tag
        tag: v1.0.0
        # -- image pull policy
        pullPolicy: IfNotPresent
      env:
        # -- metrics port
        port: 9794
        # -- Set to true to enable gathering of additional metrics (slow)
        additionalMetrics: false
        # -- Set to true to enable gathering unknown queue items
        unknownQueueItems: false

###
# Prowlarr specific values
###
prowlarr:
  enabled: true
  name: prowlarr

  image:
    repository: lscr.io/linuxserver/prowlarr
    tag: latest
    pullPolicy: IfNotPresent

  env:
    TZ: UTC

  service:
    port: 9696

  ingress:
    enabled: false

  autoscaling:
    enabled: false

###
# Radarr specific values
###
radarr:
  enabled: true
  image:
    repository: lscr.io/linuxserver/radarr
    pullPolicy: IfNotPresent
    tag: latest

  env:
    TZ: UTC

  service:
    port: 7878

  ingress:
    enabled: false

  autoscaling:
    enabled: false

  # -- Configures the probes for the main Pod.
  # @default -- See values.yaml
  probes:
    liveness:
      enabled: true
      ## Set this to true if you wish to specify your own livenessProbe
      custom: true
      ## The spec field contains the values for the default livenessProbe.
      ## If you selected custom: true, this field holds the definition of the livenessProbe.
      spec:
        exec:
          command:
            - /usr/bin/env
            - bash
            - -c
            - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while
              read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
        failureThreshold: 5
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10

  # -- Configure persistence settings for the chart under this key.
  ## Config persistence is required for the Prometheus exporter sidecar.
  # @default -- See values.yaml
  persistence:
    config:
      enabled: false

    media:
      enabled: false
      mountPath: /media

  metrics:
    # -- Enable and configure Exportarr sidecar and Prometheus serviceMonitor.
    # @default -- See values.yaml
    enabled: false
    serviceMonitor:
      interval: 3m
      scrapeTimeout: 1m
      labels: {}
    # -- Enable and configure Prometheus Rules for the chart under this key.
    # @default -- See values.yaml
    prometheusRule:
      enabled: false
      labels: {}
      # -- Configure additionial rules for the chart under this key.
      # @default -- See prometheusrules.yaml
      rules:
        []
        # - alert: RadarrDown
        #   annotations:
        #     description: Radarr service is down.
        #     summary: Radarr is down.
        #   expr: |
        #     radarr_system_status == 0
        #   for: 5m
        #   labels:
        #     severity: critical
    exporter:
      image:
        # -- image repository
        repository: ghcr.io/onedr0p/exportarr
        # -- image tag
        tag: v1.0.0
        # -- image pull policy
        pullPolicy: IfNotPresent
      env:
        # -- metrics port
        port: 9793
        # -- Set to true to enable gathering of additional metrics (slow)
        additionalMetrics: false
        # -- Set to true to enable gathering unknown queue items
        unknownQueueItems: false

lidarr:
  name: lidarr
  enabled: true

  image:
    repository: lscr.io/linuxserver/lidarr
    pullPolicy: IfNotPresent
    tag: latest

  service:
    port: 8686

  autoscaling:
    enabled: false

readarr:
  name: readarr
  enabled: true

  image:
    repository: lscr.io/linuxserver/readarr
    pullPolicy: IfNotPresent
    tag: latest

  service:
    port: 8787

  autoscaling:
    enabled: false

  annotations: {}

qbittorrent:
  name: qbittorrent
  image:
    repository: lscr.io/linuxserver/sonarr
    tag: latest
    pullPolicy: IfNotPresent

  env:
    TZ: UTC

  configStorageType: ConfigMap

  service:
    port: 8000

  ingress:
    enabled: false

  autoscaling:
    enabled: false

  extraEnv: []
  extraEnvFrom: []
  extraVolumes: []

  existingSecretForConfig: null
  externalConfigSecretName: ""

  readinessProbe: {}

###
# Transmission specific values
###
transmission:
  fullname: transmission
  image:
    repository: lscr.io/linuxserver/transmission
    pullPolicy: IfNotPresent
    tag: latest
  initContainers:
    custom-webui:
      name: custom-webui
      image: curlimages/curl:latest
      command:
        - "/bin/sh"
        - "-c"
        - "curl -o- -sL https://github.com/johman10/flood-for-transmission/releases/download/latest/flood-for-transmission.tar.gz | tar xzf - -C /config"
      volumeMounts:
        - name: config
          mountPath: /config
      securityContext:
        runAsUser: 568
        runAsGroup: 568
  env:
    # -- Set the container timezone
    TZ: UTC
    # -- Path in container where the Web UI is located
    TRANSMISSION_WEB_HOME: /config/flood-for-transmission/
    # -- Password to access the Web UI
    TRANSMISSION_RPC_PASSWORD: CHANGEME
    # -- Torrent download directory
    TRANSMISSION_DOWNLOAD_DIR: /downloads/complete
    # -- Enable incomplete download directory
    TRANSMISSION_INCOMPLETE_DIR_ENABLED: false
    # -- Incomplete download directory
    TRANSMISSION_INCOMPLETE_DIR: /downloads/incomplete
    # -- Enable watch directory
    TRANSMISSION_WATCH_DIR_ENABLED: false
    # -- Watch directory
    TRANSMISSION_WATCH_DIR: /watch

  ingress:
    # -- Enable and configure ingress settings for the chart under this key.
    # @default -- See values.yaml
    main:
      enabled: false
      annotations: {}
      # - grafana.appkins.io
      hosts: []
      # tls:
      #    - hosts:
      #        - grafana.appkins.io
      tls: []

  persistence:
    config:
      enabled: false
      mountPath: /config

    downloads:
      enabled: false
      mountPath: /downloads

    watch:
      enabled: false
      mountPath: /watch
